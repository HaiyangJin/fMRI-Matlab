function CBIG_RF_find_nearestVertex_fsaverage2MNI_mapping(map_dir)
% function CBIG_RF_find_nearestVertex_fsaverage2MNI_mapping(map_dir)
%
% This wrapper function reads the RF-ANTs fsaverage-to-MNI152 mapping and convert the spherical 
% coordiantes in fsaverage to their nearest vertices
%
% Input:
%     - map_dir:
%               absolute path to directory containing average mappings generated by 
%               Registration Fuison approach
%
% Output:
%     A .mat file is saved to map_dir containing the 3x163842 matrix of
%     fsaverage-vertex-to-MNI152-voxel mapping.
%
% Example:
% CBIG_RF_find_nearestVertex_fsaverage2MNI_mapping('../final_warps_FS5.3')
% Using this command in the same directory as this script converts the RF-ANTs fsaverage-to-MNI152 mapping 
% from bin/final_warps_FS5.3 to mapping fsaverage vertices to MNI152 voxels
%
% Written by Wu Jianxiao and CBIG under MIT license: https://github.com/ThomasYeoLab/CBIG/blob/master/LICENSE.md

% Function usage
if nargin < 1
    disp('usage: CBIG_RF_find_nearestVertex_fsaverage2MNI_mapping(map_dir)');
    exit
end

% Load input mapping
load(fullfile(map_dir, 'allSub_fsaverage_to_FSL_MNI152_FS4.5.0_RF_ANTs_avgMapping.prop.mat'));

% Find nearest vertex for left hemisphere
lh_avg_mesh = CBIG_ReadNCAvgMesh('lh', 'fsaverage', 'sphere', 'cortex');
lh_mask = double(sum(abs(lh_coord))~=0);
lh_vertex = zeros(1, size(lh_coord, 2));
lh_vertex(lh_mask~=0) = MARS_findNV_kdTree(single(lh_coord(:, lh_mask~=0)), lh_avg_mesh.vertices);

% Find nearest vertex for right hemisphere
rh_avg_mesh = CBIG_ReadNCAvgMesh('rh', 'fsaverage', 'sphere', 'cortex');
rh_mask = double(sum(abs(rh_coord))~=0);
rh_vertex = zeros(1, size(rh_coord, 2));
rh_vertex(rh_mask~=0) = MARS_findNV_kdTree(single(rh_coord(:, rh_mask~=0)), rh_avg_mesh.vertices);

% Reshape the vertex array into 3D matrix
lh_vertex = reshape(lh_vertex, 256, 256, 256);
rh_vertex = reshape(rh_vertex, 256, 256, 256);

% Save results
save(fullfile(map_dir, 'allSub_fsaverage_to_FSL_MNI152_FS4.5.0_RF_ANTs_avgMapping.vertex.mat'), ...
    'lh_vertex', 'rh_vertex');




